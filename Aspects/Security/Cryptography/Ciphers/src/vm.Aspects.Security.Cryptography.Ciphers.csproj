<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>

        <VersionPrefix>2.1.0</VersionPrefix>
        <VersionSuffix></VersionSuffix>
        <AssemblyName>vm.Aspects.Security.Cryptography.Ciphers</AssemblyName>
        <RootNamespace>vm.Aspects.Security.Cryptography.Ciphers</RootNamespace>
        <AssemblyDescription>A set of cipher classes producing cipher-packages.</AssemblyDescription>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NeutralLanguage>en-US</NeutralLanguage>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>C:\Projects\Git\vm\Common Items\vm.snk</AssemblyOriginatorKeyFile>
        <CodeAnalysisRuleSet>..\..\..\..\..\Common Items\vmAllRules.ruleset</CodeAnalysisRuleSet>
        <LangVersion>7.1</LangVersion>

        <Authors>Val Melamed</Authors>
        <Company>vm</Company>
        <Product>vm.Aspects</Product>
        <Copyright>Copyright © vm 2013-2018</Copyright>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

        <!-- NuGet package properties: -->
        <PackageId>vm.Aspects.Security.Cryptography.Ciphers</PackageId>
        <Version>2.1.0</Version>
        <PackageLicenseUrl>https://github.com/vmelamed/vm/blob/master/LICENSE</PackageLicenseUrl>
        <PackageProjectUrl>https://github.com/vmelamed/vm/tree/master/Aspects/Security/Cryptography/Ciphers</PackageProjectUrl>
        <RepositoryType>git</RepositoryType>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageTags>aspects cipher cypher encryption decryption hash signature</PackageTags>
        <Description>
            The Ciphers package helps in addressing a common application requirements for achieving confidentiality, integrity and
            source authentication of data-at-rest, data-in-motion, and data-in-use, e.g. for PII (Personally Identifiable Information) fields.
            Features:
            * The package uses industry strong cryptographic algorithms for encryption, hashing and signing included in the .NET framework.
            * It is very easy to integrate with a Dependency Injection container like Unity, i.e. the behaviors are abstracted with a handful of simple interfaces.
            * It is very easy to use and configure the objects. No configuration parameters default to sensible defaults.
            * The package does not have dependencies except on the .NET Standard interfaces.
            * Built and tested with .NET Standard 2.0.
        </Description>
        <PackageReleaseNotes>
            Refactored the library to drop the dependency on Common Service Locator - no assumption of DI container anymore.
            Refactored a number of c-tors to take additional dependencies, which were previously resolved from the CSL.
            Combined all key management utilities in one - KeyFile.
            Added the utility FileCrypt that can encrypt and decrypt files (for more information run FileCrypt help/FileCrypt help encrypt/FileCrypt help decrypt)
            Refactored the utilities to use CommandLineParser.
            Note: this package inherits from Ciphers but the name is changed consistency's sake.
            vm.Aspects.Security.Cryptography.Cyphers is dependent on .NET Standard 2.0.
        </PackageReleaseNotes>

    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DocumentationFile>C:\Projects\Git\vm\Aspects\Security\Cryptography\Ciphers\src\vm.Aspects.Security.Cryptography.Ciphers.xml</DocumentationFile>
        <OutputPath></OutputPath>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DocumentationFile>C:\Projects\Git\vm\Aspects\Security\Cryptography\Ciphers\src\vm.Aspects.Security.Cryptography.Ciphers.xml</DocumentationFile>
        <OutputPath></OutputPath>
    </PropertyGroup>

    <ItemGroup>
        <None Remove="project.assets.json.net462" />
        <None Remove="project.assets.json.net471" />
        <None Remove="project.assets.json.net472" />
    </ItemGroup>

    <ItemGroup>
        <Compile Include="..\..\..\..\..\Common Items\AssemblyInfo.global.cs" Link="Properties\AssemblyInfo.global.cs" />
    </ItemGroup>

    <ItemGroup>
        <None Include="..\..\..\..\..\Common Items\Dictionary.xml" Link="Dictionary.xml" />
        <None Include="..\..\..\..\..\Common Items\vm.snk" Link="vm.snk" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Properties\Resources.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resources.resx</DependentUpon>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Update="Properties\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>

</Project>
